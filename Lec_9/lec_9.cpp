#define _CRT_SECURE_NO_WARNINGS // отключение предупреждений о небезопасности

#include<iostream> // подключение библиотеки iostream для использования функций ввода/вывода
#include <string.h> // подключение библиотеки string.h для использования функций работы со строками

void EX1() {
    char name[20]; // выделение памяти
    printf("Введите имя: "); // вывод
    scanf("%s", name); // ввод
    printf("%s", name); // вывод
}

void EX2() {
    char sl[] = "CTPOKA"; // выделение памяти и инициализация строки для переменной sl
    char s2[] = "символов"; // выделение памяти и инициализация строки для переменной s2
    strcpy(s2, sl); // копирование строки sl в строку s2
    puts(s2); // СТРОКА - вывод строки s2
}

void EX3() {
    static char s1[] = "СТРОКА"; // выделение памяти и инициализация строки для переменной s1
    const char* s2 = "_символов"; // выделение памяти и инициализация строки для переменной s2
    strcat(s1, s2); // объединение строк s1 и s2
    puts(s1); // СТРОКАсимволов - вывод строки s1
}

void EX4() {
    char s1[] = "CTPOKA"; // выделение памяти и инициализация строки для переменной s1
    char* ptr, c = 'P'; // выделение памяти и инициализация символьной переменной c и указателя ptr на символ
    ptr = strchr(s1, c); // поиск символа с в строке s1
    if (ptr) // если символ найден
        printf("%lu", ptr - s1); // Результат 2
    else
        printf("НЕТ символа"); // иначе вывод сообщения
}

void EX5() {
    char s1[] = "CTPOKA"; // выделение памяти и инициализация строки для переменной s1
    const char* ptr, * s2 = "P0K"; //регистры играют роль
    ptr = strpbrk(s1, s2); // поиск первого вхождения любого символа из строки s2 в строке s1

    if (ptr) // если символ найден
        printf("%lu", ptr - s1); // Результат 2
    else // иначе вывод сообщения
        printf("нет символа");
}

void EX6() {
    char s1[] = "LOLOKEKE"; // выделение памяти и инициализация строки для переменной s1
    char s2[] = "KE"; // выделение памяти и инициализация строки для переменной s2
    int n; // выделение памяти для целочисленной переменной n
    n = strcspn(s1, s2); // поиск первого вхождения любого символа из строки s2 в строке s1
    printf("%d", n); // 4
}

void EX7() {
    char s1[] = "1234567890"; // выделение памяти и инициализация строки для переменной s1
    char s2[] = "123458"; // выделение памяти и инициализация строки для переменной s2
    int n; // выделение памяти для целочисленной переменной n
    n = strspn(s1, s2); // поиск первого вхождения любого символа из строки s2 в строке s1
    printf("%d", n); // 5
}

int main() {
    setlocale(LC_ALL, "Russian"); // установка русской локализации
    EX1(); std::cout << std::endl << std::endl;
    EX2(); std::cout << std::endl << std::endl;
    EX3(); std::cout << std::endl << std::endl;
    EX4(); std::cout << std::endl << std::endl;
    EX5(); std::cout << std::endl << std::endl;
    EX6(); std::cout << std::endl << std::endl;
    EX7();
}