#define _CRT_SECURE_NO_WARNINGS // отключение предупреждений о небезопасности

#include<iostream> // подключение библиотеки iostream для использования функций ввода/вывода
#include <stdio.h> // подключение библиотеки ввода-вывода
#include <math.h> // подключение математической библиотеки

void EX1() {
    int a, b; // объявление целых переменных
    puts("Введите значения а и b"); // вывод сообщения на экран
    scanf("%d %d", &a, &b); // ввод значений переменных

    if (a > b) puts("a больше b");
    else puts("a меньше или равно b");

    if (a == b) puts("a равно b");
}

void EX2() {
    int i; // объявление целой переменной

    printf("Введите целое число:\n"); // вывод сообщения на экран
    scanf("%d", &i); // ввод значения переменной

    if ((i > 31) && (i < 256)) {
        printf("Такой символ существует");
    } else {
        printf("Taкoгo символа нет");
    }
}

void EX3() {
    float x, y; // объявление вещественных переменных
    printf("Введите исходное значение х\n"); // вывод сообщения на экран
    scanf("%f", &x); // ввод значения переменной

    if (x > 0) { // проверка условия
        y = log(x); // вычисление значения функции
    }
    else { // ветвь альтернативного действия
        y = pow(cos(x), 2); // вычисление значения функции
    }

    printf("y =%7.3f", y); // вывод результата на экран
}

void EX4() {
    float x, y, b; // объявление вещественных переменных
    printf("Введите исходные данные х, b \n"); // вывод сообщения на экран
    scanf("%f%f", &x, &b); // ввод значений переменных

    if (x < 10) { // проверка условия
        y = 1 + b * pow(x, 2); // вычисление значения функции
    }
    else {
        if (x <= 15) { // проверка условия
            y = log(x) + b; // вычисление значения функции
        } else { // ветвь альтернативного действия
            y = sin(b * x); // вычисление значения функции
        }
    }

    printf("y = %7.3f", y); // вывод результата на экран
}

void EX5() {
    char y; // объявление символьной переменной
    scanf("%c", &y); // ввод значения переменной

    switch (y) { // проверка условия
        case '1': // ветвь действия при выполнении условия '1' 
            printf("Ветвь 1\n"); // вывод сообщения на экран
            break; // прерывание выполнения оператора switch
        case '2': // ветвь альтернативного действия 
        case '3': // ветвь альтернативного действия
            printf("Ветвь 2 или 3\n"); // вывод сообщения на экран
            break; // прерывание выполнения оператора switch
        default: // ветвь альтернативного действия
            printf("Bетви 1, 2, 3 не работают\n"); // вывод сообщения на экран
    }
}

void EX6() {
    int i, j = 1, k; // объявление целых переменных

    for (i = 1; i <= 3; i++) { // цикл с параметром
        printf("Acтана \t"); // вывод сообщения на экран
    }

    printf("\nУкажите число повторений цикла\n"); // вывод сообщения на экран
    scanf("%d", &k); // ввод значения переменной

    for (i = 1; i <= k; i++) { // цикл с параметром
        printf("%d", j); // вывод значения переменной
    }

    j = i; // присваивание значения переменной
    printf("\n"); // вывод сообщения на экран

    for (i = 1; i <= k; i++) { // цикл с параметром
        printf("%d ", j *= i); // вывод значения переменной
    }
}

void EX7() {
    int i, s; // объявление целых переменных
    i = 1; // присваивание значения переменной
    while (scanf("%d", &s)) { // цикл с параметром
        printf("Введенное число %d с номером %d \n", s, i); // вывод результата на экран
        i++; // присваивание значения переменной
        if (i > 3) break; // прерывание выполнения оператора while
    };
}

void EX8() {
    int i, s; // объявление целых переменных
    i = 1; // присваивание значения переменной
    s = -1; // присваивание значения переменной
    do { // цикл с параметром
        printf("Число %d с номером %d \n", s, i); // вывод результата на экран
        i++; // присваивание значения переменной
        if (i > 3) break; // прерывание выполнения оператора do
    } while (scanf("%d", &s)); // цикл с параметром
}

int main() {
    setlocale(LC_ALL, "Russian"); // установка русской локализации
    EX1(); std::cout << std::endl << std::endl;
    EX2(); std::cout << std::endl << std::endl;
    EX3(); std::cout << std::endl << std::endl;
    EX4(); std::cout << std::endl << std::endl;
    EX5(); std::cout << std::endl << std::endl;
    EX6(); std::cout << std::endl << std::endl;
    EX7(); std::cout << std::endl << std::endl;
    EX8();
}